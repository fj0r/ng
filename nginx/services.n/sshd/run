#!/usr/bin/with-contenv bash
echo >&2 "starting sshd"
env | grep _ >> /etc/environment

print_fingerprints() {
    local BASE_DIR=${1-'/etc/ssh'}
    for item in rsa ecdsa ed25519; do
        echo ">>> Fingerprints for ${item} host key"
        ssh-keygen -E md5 -lf ${BASE_DIR}/ssh_host_${item}_key
        ssh-keygen -E sha256 -lf ${BASE_DIR}/ssh_host_${item}_key
        ssh-keygen -E sha512 -lf ${BASE_DIR}/ssh_host_${item}_key
    done
}


if ls /etc/ssh/ssh_host_* 1> /dev/null 2>&1; then
    echo ">> Host keys exist in default location"
    # Don't do anything
    print_fingerprints
else
    echo ">> Generating new host keys"
    ssh-keygen -A
    print_fingerprints /etc/ssh
fi


mkdir -p /etc/ssh/authorized_keys
for i in "${!ed25519_@}"; do
    _AU=${i:8}
    eval "echo \"ssh-ed25519 \$$i\" >> /etc/ssh/authorized_keys/${_AU}"
done


# Fix permissions, if writable
if [ -w ~/.ssh ]; then
    chown root:root ~/.ssh && chmod 700 ~/.ssh/
fi
if [ -w ~/.ssh/authorized_keys ]; then
    chown root:root ~/.ssh/authorized_keys
    chmod 600 ~/.ssh/authorized_keys
fi
if [ -w /etc/ssh/authorized_keys ]; then
    chown root:root /etc/ssh/authorized_keys
    chmod 700 /etc/ssh/authorized_keys
    find /etc/ssh/authorized_keys/ -type f -exec chmod 600 {} \;
fi


# Lock root account, if Disabled
if [[ "${SSH_DISABLE_ROOT}" == "true" ]]; then
    echo "WARNING: root account is now locked. Unset SSH_DISABLE_ROOT to unlock the account."
else
    usermod -p '' root
fi


exec /usr/sbin/sshd -D -e 2>&1
