--- Dockerfile-origin	2021-08-08 01:07:04.922310087 +0800
+++ Dockerfile	2021-08-08 00:56:35.122318423 +0800
@@ -2,16 +2,19 @@
 # https://github.com/openresty/docker-openresty
 
 ARG RESTY_IMAGE_BASE="alpine"
-ARG RESTY_IMAGE_TAG="3.13"
+ARG RESTY_IMAGE_TAG="3.14"
+ARG ENABLE_PROXY=false
 
-FROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}
+
+FROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG} as production-stage
 
 LABEL maintainer="Evan Wies <evan@neomantra.net>"
 
 # Docker Build Arguments
-ARG RESTY_IMAGE_BASE="alpine"
-ARG RESTY_IMAGE_TAG="3.14"
+ARG APISIX_VERSION=2.8
 ARG RESTY_VERSION="1.19.3.2"
+ARG RESTY_LUAROCKS_VERSION="3.7.0"
+ARG NGINX_NCHAN_VERSION="1.2.8"
 ARG RESTY_OPENSSL_VERSION="1.1.1k"
 ARG RESTY_OPENSSL_PATCH_VERSION="1.1.1f"
 ARG RESTY_OPENSSL_URL_BASE="https://www.openssl.org/source"
@@ -48,7 +51,9 @@
     --with-stream_ssl_module \
     --with-threads \
     "
-ARG RESTY_CONFIG_OPTIONS_MORE=""
+ARG RESTY_CONFIG_OPTIONS_MORE="\
+    --add-module=../nchan \
+    "
 ARG RESTY_LUAJIT_OPTIONS="--with-luajit-xcflags='-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT'"
 
 ARG RESTY_ADD_PACKAGE_BUILDDEPS=""
@@ -62,6 +67,7 @@
     --with-ld-opt='-L/usr/local/openresty/pcre/lib -L/usr/local/openresty/openssl/lib -Wl,-rpath,/usr/local/openresty/pcre/lib:/usr/local/openresty/openssl/lib' \
     "
 
+LABEL apisix_version="${APISIX_VERSION}"
 LABEL resty_image_base="${RESTY_IMAGE_BASE}"
 LABEL resty_image_tag="${RESTY_IMAGE_TAG}"
 LABEL resty_version="${RESTY_VERSION}"
@@ -76,6 +82,7 @@
 LABEL resty_add_package_rundeps="${RESTY_ADD_PACKAGE_RUNDEPS}"
 LABEL resty_eval_pre_configure="${RESTY_EVAL_PRE_CONFIGURE}"
 LABEL resty_eval_post_make="${RESTY_EVAL_POST_MAKE}"
+LABEL resty_luarocks_version="${RESTY_LUAROCKS_VERSION}"
 
 
 RUN apk add --no-cache --virtual .build-deps \
@@ -134,6 +141,8 @@
     && make -j${RESTY_J} \
     && make -j${RESTY_J} install \
     && cd /tmp \
+    && mkdir nchan \
+    && curl -sSL https://github.com/slact/nchan/archive/v${NGINX_NCHAN_VERSION}.tar.gz | tar -zxf - -C nchan --strip-components=1 \
     && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \
     && tar xzf openresty-${RESTY_VERSION}.tar.gz \
     && cd /tmp/openresty-${RESTY_VERSION} \
@@ -158,11 +167,8 @@
 COPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf
 COPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf
 
-CMD ["/usr/local/openresty/bin/openresty", "-g", "daemon off;"]
 
-# Use SIGQUIT instead of default SIGTERM to cleanly drain requests
-# See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls
-STOPSIGNAL SIGQUIT
+
 # Dockerfile - alpine-fat
 # https://github.com/openresty/docker-openresty
 #
@@ -174,20 +180,8 @@
 #       copy it out, then uninstall gettext (to save some space as envsubst is very small)
 #       libintl and musl are dependencies of envsubst, so those are installed as well
 
-ARG RESTY_FAT_IMAGE_BASE="openresty/openresty"
-ARG RESTY_FAT_IMAGE_TAG="alpine"
-
-FROM ${RESTY_FAT_IMAGE_BASE}:${RESTY_FAT_IMAGE_TAG}
 
-ARG RESTY_FAT_IMAGE_BASE="openresty/openresty"
-ARG RESTY_FAT_IMAGE_TAG="alpine"
 
-ARG RESTY_LUAROCKS_VERSION="3.7.0"
-
-LABEL maintainer="Evan Wies <evan@neomantra.net>"
-LABEL resty_fat_image_base="${RESTY_FAT_IMAGE_BASE}"
-LABEL resty_fat_image_tag="${RESTY_FAT_IMAGE_TAG}"
-LABEL resty_luarocks_version="${RESTY_LUAROCKS_VERSION}"
 
 RUN apk add --no-cache --virtual .build-deps \
         perl-dev \
@@ -195,7 +189,7 @@
         bash \
         build-base \
         curl \
-        libintl \ 
+        libintl \
         linux-headers \
         make \
         musl \
@@ -227,14 +221,10 @@
 ENV LUA_PATH="/usr/local/openresty/site/lualib/?.ljbc;/usr/local/openresty/site/lualib/?/init.ljbc;/usr/local/openresty/lualib/?.ljbc;/usr/local/openresty/lualib/?/init.ljbc;/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/lualib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua"
 
 ENV LUA_CPATH="/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so"
-ARG ENABLE_PROXY=false
 
-FROM openresty/openresty:1.19.3.1-alpine-fat AS production-stage
+# Dockerfile - apisix
+# https://github.com/apache/apisix-docker/blob/master/alpine/Dockerfile
 
-ARG APISIX_VERSION=2.8
-LABEL apisix_version="${APISIX_VERSION}"
-
-ARG ENABLE_PROXY
 RUN set -x \
     && (test "${ENABLE_PROXY}" != "true" || /bin/sed -i 's,http://dl-cdn.alpinelinux.org,https://mirrors.aliyun.com,g' /etc/apk/repositories) \
     && apk add --no-cache --virtual .builddeps \
@@ -253,7 +243,7 @@
     && mv /usr/local/apisix/deps/share/lua/5.1/apisix /usr/local/apisix \
     && apk del .builddeps build-base make unzip
 
-FROM alpine:3.13 AS last-stage
+FROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG} AS last-stage
 
 ARG ENABLE_PROXY
 # add runtime for Apache APISIX
@@ -277,4 +267,6 @@
 
 CMD ["sh", "-c", "/usr/bin/apisix init && /usr/bin/apisix init_etcd && /usr/local/openresty/bin/openresty -p /usr/local/apisix -g 'daemon off;'"]
 
+# Use SIGQUIT instead of default SIGTERM to cleanly drain requests
+# See https://github.com/openresty/docker-openresty/blob/master/README.md#tips--pitfalls
 STOPSIGNAL SIGQUIT
